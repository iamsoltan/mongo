-Write a MongoDB query to display all the documents in the collection restaurants.
db.restaurants.find();

-Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine for all the documents in the collection restaurant.
db.restaurants.find({},{"restaurant_id" : 1,"name":1,"borough":1,"cuisine" :1});

-Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine, but exclude the field _id for all the documents in the collection restaurant.
db.restaurants.find({},{"_id" : 0,"restaurant_id" : 1,"name":1,"borough":1,"cuisine" :1});

-Write a MongoDB query to display the fields restaurant_id, name, borough and zip code, but exclude the field _id for all the documents in the collection restaurant.
db.restaurants.find({},{"_id" : 0,"restaurant_id" : 1,"name":1,"borough":1,"adress.zipcode" :1});

-Write a MongoDB query to display all the restaurant which is in the borough Bronx.
db.restaurants.find({"borough" : "Bronx});

-Write a MongoDB query to display the first 5 restaurant which is in the borough Bronx.
db.restaurants.find({"borough": "Bronx"}).limit(5);

-Write a MongoDB query to display the next 5 restaurants after skipping first 5 which are in the borough Bronx.
db.restaurants.find({"borough": "Bronx"}).skip(5).limit(5);

-Write a MongoDB query to find the restaurants who achieved a score more than 90.
db.restaurants.find({ "grades" : { $elemMatch:{"score":{$gt : 90 }}}});

-Write a MongoDB query to find the restaurants that achieved a score, more than 80 but less than 100.
db.restaurants.find({ "grades" : { $elemMatch:{"score":{$gt : 80, $lt : 100 }}}});

-Write a MongoDB query to find the restaurants which locate in latitude value less than -95.754168.
db.restaurants.find({ "coord.0" : { $lt : -95.754168 }});

-Write a MongoDB query which will select the restaurant Id, name and grades for those restaurants which returns 0 as a remainder after dividing the score by 7.
db.restaurants.find( {"grades.score" : {$mod : [7,0]} }, {"restaurant_id" : 1,"name":1,"grades":1});

-Write a MongoDB query to find the restaurant name, borough, longitude and attitude and cuisine for those restaurants which contains 'mon' as three letters somewhere in its name.
db.restaurants.find(   {"name": {$regex:/mon/}}, {"name":1, "borough":1, "coord":1, "cuisine":1}  );

-Write a MongoDB query to find the restaurant name, borough, longitude and latitude and cuisine for those restaurants which contain 'Mad' as first three letters of its name.
db.restaurants.find(   {"name": {$regex:/^Mad/}}, {"name":1, "borough":1, "coord":1, "cuisine":1}  );
